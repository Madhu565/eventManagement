require("dotenv").config();const express=require("express"),bodyParser=require("body-parser"),ejs=require("ejs"),mongoose=require("mongoose"),passport=require("passport"),session=require("express-session"),passportLocalMongoose=require("passport-local-mongoose"),multer=require("multer");var fs=require("fs"),path=require("path");const app=express();app.set("view engine","ejs"),app.use(bodyParser.urlencoded({extended:!0})),app.use(express.static("public")),app.use(session({secret:"secret",resave:!1,saveUninitialized:!1})),app.use(passport.initialize()),app.use(passport.session()),mongoose.connect(`mongodb+srv://${process.env.ADMIN}:${process.env.PASSWORD}@cluster0.eyjhl.mongodb.net/projectDB`,{useUnifiedTopology:!0,useNewUrlParser:!0});const eventSchema=new mongoose.Schema({username:String,organizerName:String,eventName:String,description:String,location:String,tolalCapacity:Number,startDate:Number,startTime:String,endDate:Number,endTime:String,price:Number,city:String,image:{data:Buffer,contentType:String},Booked:Number}),Event=mongoose.model("Event",eventSchema),audianceSchema=new mongoose.Schema({audiName:String,audiEmail:String,audiPhNum:Number,audiAge:Number,audiAddress:String,eventId:String,noOfTickets:Number,gender:String}),Audiance=mongoose.model("AudianceDetail",audianceSchema),organiserSchema=new mongoose.Schema({username:String,name:String,email:String,password:String});organiserSchema.plugin(passportLocalMongoose);const Organiser=mongoose.model("Organiser",organiserSchema);function dateToNumber(e){let n=[];for(let r=0;r<e.length;r++)"-"!=e[r]&&n.push(e[r]);let r=n.join("");return Number(r)}function handleError(e){}function today(){let e=new Date,n=e.getDate(),r=e.getMonth()+1,t=e.getFullYear();return`${t}-0${r}-${n}`}passport.use(Organiser.createStrategy()),passport.serializeUser(Organiser.serializeUser()),passport.deserializeUser(Organiser.deserializeUser()),app.get("/",((e,n)=>{n.render("landing")})),app.get("/organiser",(function(e,n){e.isAuthenticated()?Event.find({username:e.user.username},(function(r,t){if(r);else{var a=e.user.name;n.render("organiser",{passedname:a,foundEvents:t})}})):n.redirect("/login"),Event.deleteMany({endDate:{$lte:dateToNumber(today())}},(e=>{}))})),app.get("/createEvent",(function(e,n){n.render("createEvent")})),app.get("/pictures",(function(e,n){Event.find({image:{$ne:null}},(function(e,r){e||r&&n.render("pictures",{items:r})}))}));var Storage=multer.diskStorage({destination:"./public/uploads/",filename:(e,n,r)=>{r(null,n.fieldname+"_"+Date.now())}}),upload=multer({storage:Storage}).single("file");app.post("/createEvent",upload,(function(e,n){new Event({username:e.user.username,eventName:e.body.Name,description:e.body.description,location:e.body.location,tolalCapacity:e.body.capacity,startDate:dateToNumber(e.body.startDate),startTime:e.body.startTime,endDate:dateToNumber(e.body.endDate),endTime:e.body.endTime,price:e.body.price,city:e.body.city,Booked:0,image:{data:fs.readFileSync(path.join("./public/uploads/"+e.file.filename)),contentType:"image/png"}}).save((function(e,r){if(e)throw e;n.redirect("/organiser")}))})),app.post("/delete",(function(e,n){var r=e.body.id;Event.deleteOne({_id:r},(function(e){})),n.redirect("organiser")})),app.get("/events",((e,n)=>{Event.find({},((e,r)=>{e||n.render("events",{foundEvents:r})}))})),app.get("/users/register",((e,n)=>{n.render("createEvent")})),app.get("/analytics/:id",(function(e,n){const r=e.params.id;let t=0,a=0,i=0,o=0,s=0,d=0,u=[];Event.find({_id:r},(function(e,n){e||(u=n)})).then((()=>{Audiance.find({eventId:r},(function(e,r){e||(r.forEach((function(e){"Male"===e.gender&&(t+=1),"Female"===e.gender&&(a+=1),e.audiAge>=0&&e.audiAge<=14&&(i+=1),e.audiAge>14&&e.audiAge<=24&&(o+=1),e.audiAge>24&&e.audiAge<=64&&(s+=1),e.audiAge>64&&(d+=1)})),n.render("analytics",{male:t,female:a,children:i,teenager:o,middleAged:s,seniorCitizen:d,booking:u[0].Booked,cap:u[0].tolalCapacity}))}))}))})),app.get("/cities/:city",((e,n)=>{const r=e.params.city;Event.deleteMany({endDate:{$lte:dateToNumber(today())}},(e=>{})),Event.find({city:r},((e,r)=>{e||n.render("events",{foundEvents:r})}))})),app.post("/audiDetailsInput",((e,n)=>{const{AudiName:r,email:t,ph_num:a,age:i,address:o,id:s,tickets:d,gender:u}=e.body;new Audiance({audiName:r,audiEmail:t,audiPhNum:a,audiAge:i,audiAddress:o,eventId:s,noOfTickets:d,gender:u}).save(),Event.findById(s,((e,n)=>{if(e)return handleError(e);n.Booked=Number(n.Booked)+Number(d),n.save(((e,n)=>{if(e)return handleError(e)}))})),n.render("audiBookConfirm",{AudiName:r})})),app.get("/cities/:city/:event/booking",((e,n)=>{const r=e.params.city,t=e.params.event;Event.find({city:r,eventName:t},((e,r)=>{if(e);else{var t=r[0].tolalCapacity-r[0].Booked;n.render("audiDetailsInput",{foundEvent:r,remain:t})}}))})),app.get("/register",(function(e,n){n.render("register")})),app.post("/register",(function(e,n){Organiser.register({username:e.body.username,name:e.body.name,email:e.body.email},e.body.password,(function(r,t){r?n.redirect("/register"):passport.authenticate("local")(e,n,(function(){n.redirect("/organiser")}))}))})),app.get("/login",((e,n)=>{n.render("login")})),app.post("/login",(function(e,n){const r=new Organiser({username:e.body.username,password:e.body.password});e.login(r,(function(r){r||passport.authenticate("local",{failureRedirect:"/login"})(e,n,(function(){n.redirect("/organiser")}))}))})),app.get("/logout",(function(e,n){e.logout(),n.redirect("/")})),app.listen(3e3,(()=>{}));